package com.rb.gui;

import com.rb.domain.Table;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import org.dz.PanelCapturaMod;

/**
 *
 * @author lrod
 */
public class TableRender extends PanelCapturaMod implements ActionListener, MouseListener {
    
    private Border borderOver;
    private Border borderNormal;
    private String actionCommand;
    private Table table;
    private JPopupMenu popupOptions;
    private Color color1;
    private Color color2;

    /**
     * Creates new form TableRender
     */
    public TableRender() {
        initComponents();
        createComponents();
    }
    
    private void createComponents() {
        
        color1 = new Color(230, 190, 180);
        color2 = new Color(200,180,248);
        
        borderOver = BorderFactory.createEtchedBorder(Color.RED, new Color(255, 20, 15));
        borderNormal = BorderFactory.createEtchedBorder();
        
        lbName.setFont(new Font("Sans", 1, 18));
        lbName.setHorizontalTextPosition(SwingConstants.CENTER);
        
        lbOrder.setFont(new Font("Sans", 1, 18));
        lbOrder.setHorizontalTextPosition(SwingConstants.LEFT);
        
        lbWaiter.setFont(new Font("Sans", 1, 12));
        
        lbPeople.setFont(new Font("Sans", 1, 12));
        lbPeople.setHorizontalAlignment(SwingConstants.CENTER);
        
        btActions.setActionCommand(AC_SHOW_OPTIONS);
        btActions.addActionListener(this);
        
        popupOptions = new JPopupMenu();
        
        JMenuItem item = new JMenuItem("Limpiar mesa");
        item.addActionListener(this);
        item.setActionCommand(AC_CLEAN_TABLE);
        popupOptions.add(item);
                
        item = new JMenuItem("Cambiar mesa");
        item.addActionListener(this);
        item.setActionCommand(AC_CHANGE_TABLE);
        popupOptions.add(item);
        
        item = new JMenuItem("Cambiar mesero");
        item.addActionListener(this);
        item.setActionCommand(AC_CHANGE_WAITER);
        popupOptions.add(item);
        
        setBackground(color1);
        
        addMouseListener(this);
        
    }
    public static final String AC_CLEAN_TABLE = "AC_CLEAN_TABLE";
    public static final String AC_CHANGE_WAITER = "AC_CHANGE_WAITER";
    public static final String AC_CHANGE_TABLE = "AC_CHANGE_TABLE";
    public static final String AC_SHOW_OPTIONS = "AC_SHOW_OPTIONS";
    
    public void setActionCommand(String actionCommand) {
        this.actionCommand = actionCommand;
    }
    
    public String getActionCommand() {
        return actionCommand;
    }
    
    public void setWaiter(String waiter) {
        lbWaiter.setText(waiter);
    }
    
    public void setOrder(String order) {
        lbOrder.setText(order);
    }
    
    public void setStatus(int status) {
        switch (status) {
            case Table.TABLE_ST_LIMPIA:
                setBackground(color1);
                break;
            case Table.TABLE_ST_PEDIDO_EN_COCINA:
                setBackground(color2);
                break;
            default:
                setBackground(color1);
        }
    }
    
    
    public void setIcon(ImageIcon icon) {
        lbStatus.setIcon(icon);
    }
    
    public void setPeople(int people) {
        if (people == 0) {
            lbPeople.setText("");
            return;
        }
        lbPeople.setText("<html><font color=blue>" + people + "</font>/<font color=green>4</font></html>");
    }
    
    public void setup(Table table) {
        this.table = table;
        lbName.setText("Mesa " + table.getName());
    }
    
    public Table getTable() {
        return table;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        lbWaiter = new javax.swing.JLabel();
        lbPeople = new javax.swing.JLabel();
        btActions = new javax.swing.JButton();
        lbOrder = new javax.swing.JLabel();

        lbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName.setBorder(null);

        lbStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbStatus.setBorder(null);

        lbWaiter.setBorder(null);

        lbPeople.setBorder(null);

        lbOrder.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 9, Short.MAX_VALUE)
                                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbWaiter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(btActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbPeople, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                    .addComponent(lbWaiter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btActions, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActions;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbOrder;
    private javax.swing.JLabel lbPeople;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbWaiter;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        
        pcs.firePropertyChange(getActionCommand(), table, this);
    }
    
    @Override
    public void mousePressed(MouseEvent e) {
        
    }
    
    @Override
    public void mouseReleased(MouseEvent e) {
        
    }
    
    @Override
    public void mouseEntered(MouseEvent e) {
        setBorder(borderOver);
    }
    
    @Override
    public void mouseExited(MouseEvent e) {
        setBorder(borderNormal);
    }
    
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (AC_SHOW_OPTIONS.equals(e.getActionCommand())) {
            popupOptions.show(btActions, -popupOptions.getWidth() + btActions.getWidth(), btActions.getHeight());
        }
    }
}
