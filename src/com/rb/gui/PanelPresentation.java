package com.rb.gui;

import com.rb.Aplication;
import com.rb.domain.Presentation;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.JRadioButton;
import org.apache.commons.lang3.StringUtils;
import org.dz.PanelCaptura;

/**
 *
 * @author lrod
 */
public class PanelPresentation extends PanelCaptura implements ActionListener {

    private final Aplication app;
    private final Presentation presentation;
    private Color colorBg;

    /**
     * Creates new form PanelAddition
     *
     * @param app
     * @param presentation
     */
    public PanelPresentation(Aplication app, Presentation presentation) {
        this.app = app;
        this.presentation = presentation;
        initComponents();
        createComponents();
    }

    private void createComponents() {
        
        colorBg = getBackground();
        
        MouseAdapter mouseClick = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                setSelected(!isSelected());
            }
        };
        
        this.addMouseListener(mouseClick);

        setBorder(BorderFactory.createLineBorder(Color.lightGray, 1, true));
        lbPrice.setForeground(Color.blue.darker());
//        lbPrice.addMouseListener(mouseClick);

        lbName.setPreferredSize(new Dimension(160, 20));
        lbName.setMinimumSize(new Dimension(160, 20));
//        lbName.addMouseListener(mouseClick);

        lbName.setText(StringUtils.capitalize(presentation.getName()));
        lbPrice.setText(app.getCurrencyFormat().format(presentation.getPrice()));

//        spCant.setValue(1);
        rbSel.setActionCommand(AC_SEL_PRESENTATION);
        rbSel.addActionListener(this);

//        activate(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        lbPrice = new javax.swing.JLabel();
        rbSel = new javax.swing.JRadioButton();

        lbName.setText("jLabel1");

        lbPrice.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        lbPrice.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbSel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbName)
                    .addComponent(lbPrice))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbName)
                .addGap(0, 0, 0)
                .addComponent(lbPrice)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(rbSel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPrice;
    private javax.swing.JRadioButton rbSel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void reset() {
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (AC_SEL_PRESENTATION.equals(e.getActionCommand())) {
            activate(rbSel.isSelected());
        }
    }

    public void setActionCommand(String command) {
        rbSel.setActionCommand(command);
    }

    public void addActionListener(ActionListener listener) {
        rbSel.addActionListener(listener);
    }

    public void removeActionListener(ActionListener listener) {
        rbSel.removeActionListener(listener);
    }

    private void activate(boolean act) {
        lbName.setEnabled(act);
        lbPrice.setEnabled(act);
//        if(act)
//            setBackground(Color.red);
//        else
//            setBackground(Color.lightGray);
    }

    public Presentation getPresentation() {
        return presentation;
    }
    
    public void setSelected(boolean sel) {
        rbSel.setSelected(sel);
//        setBackground(colorBg);
//        if(sel){
//            setBackground(Color.CYAN);
//        }
      }

    @Override
    public void setBackground(Color bg) {
        super.setBackground(bg); //To change body of generated methods, choose Tools | Templates.
        if(rbSel!=null)
        rbSel.setBackground(bg);
    }
    
    public boolean isSelected() {
        return rbSel.isSelected();
    }

    public JRadioButton getSelector() {
        return rbSel;
    }

    public static final String AC_SEL_PRESENTATION = "AC_SEL_PRESENTATION";

}
