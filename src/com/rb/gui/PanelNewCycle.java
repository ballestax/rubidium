package com.rb.gui;

import com.rb.Aplication;
import com.rb.domain.Cycle;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.math.BigDecimal;
import javax.swing.BoxLayout;
import javax.swing.SwingConstants;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import org.dz.PanelCapturaMod;
import org.dz.TextFormatter;

/**
 *
 * @author lrod
 */
public class PanelNewCycle extends PanelCapturaMod implements ActionListener {

    private final Aplication app;
    private double saldo;
    private int ciclo;

    /**
     * Creates new form PanelNewCycle
     */
    public PanelNewCycle(Aplication app) {
        this.app = app;
        initComponents();
        createComponents();
    }

    private void createComponents() {

        saldo = 0;

        ciclo = app.getControl().getMaxIDTabla("cycles") + 1;

        Font font1 = new Font("Tahoma", 1, 16);

        regIDciclo.setTextAligment(SwingConstants.RIGHT);
        regIDciclo.setFontCampo(font1);
        regIDciclo.setText(String.valueOf(ciclo));
        regIDciclo.setEditable(false);

        regSaldo.setTextAligment(SwingConstants.RIGHT);
        regSaldo.setFontCampo(font1);
        regSaldo.setDocument(TextFormatter.getDoubleLimiter());
        regSaldo.setText("0");
        regSaldo.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent e) {
                updateInfo(ciclo);
            }
        });

        updateInfo(ciclo);

        btAccept.setText("Aceptar");
        btAccept.setActionCommand(AC_ACCEPT_PANEL);
        btAccept.addActionListener(this);

        btCancel.setText("Cancelar");
        btCancel.setActionCommand(AC_CANCEL_PANEL);
        btCancel.addActionListener(this);

    }
    public static final String AC_ACCEPT_PANEL = "AC_ACCEPT_PANEL";
    public static final String AC_CANCEL_PANEL = "AC_CANCEL_PANEL";

    private void updateInfo(int ciclo) {
        saldo = Double.parseDouble(regSaldo.getText());
        String stSaldo = app.DCFORM_P.format(saldo);
        String text = "<html>Se creara el ciclo de caja: <font size=3 color=blue>" + ciclo + "</font>"
                + "<br>Con saldo inicial de:<font color=blue size=3> " + stSaldo + "</font></html>";
        lbInfo.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regIDciclo = new com.rb.gui.util.Registro(BoxLayout.X_AXIS, "ID ciclo", "",100);
        regSaldo = new com.rb.gui.util.Registro(BoxLayout.X_AXIS, "Saldo inicial", "",100);
        lbInfo = new javax.swing.JLabel();
        btAccept = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        lbInfo.setText("jLabel1");
        lbInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btAccept.setText("jButton1");

        btCancel.setText("jButton2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 96, Short.MAX_VALUE)
                        .addComponent(btCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAccept))
                    .addComponent(regSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(regIDciclo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(regIDciclo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAccept)
                    .addComponent(btCancel))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAccept;
    private javax.swing.JButton btCancel;
    private javax.swing.JLabel lbInfo;
    private com.rb.gui.util.Registro regIDciclo;
    private com.rb.gui.util.Registro regSaldo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (AC_CANCEL_PANEL.equals(e.getActionCommand())) {
            cancelPanel();
        } else if (AC_ACCEPT_PANEL.equals(e.getActionCommand())) {
            //crear el ciclo
            Cycle cycle = new Cycle();
            cycle.setInitialBalance(BigDecimal.valueOf(saldo));
            if (app.getControl().addCycleAndSnapshot(cycle)) {
                cycle = app.getControl().getCycle(ciclo);
                pcs.firePropertyChange(PanelCash.AC_NEW_CYCLE, null, cycle);
                cancelPanel();
            }

            //notificar a los listeners
        }
    }
}
